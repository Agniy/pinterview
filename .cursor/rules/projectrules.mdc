---
alwaysApply: true
---

# Cursor Rules для проекта pinterveiw

## Python Environment
- **ВСЕГДА** используй виртуальное окружение `.venv` перед запуском любых Python скриптов, тестов или проверок
- Перед запуском pytest или любых Python команд, активируй .venv: `source .venv/bin/activate`
- При предложении команд для терминала, всегда включай активацию .venv первым шагом

## Команды для тестирования
```bash
# Активировать виртуальное окружение
source .venv/bin/activate

# Затем запускать тесты
pytest
```

## Команды для запуска Python скриптов
```bash
# Активировать виртуальное окружение
source .venv/bin/activate

# Затем запускать скрипты
python script.py
```

## Импорты
- Используй относительные импорты (с точкой в начале) для модулей внутри пакета
- Пример: `from .module import Class` вместо `from module import Class`

## Тестирование
- Используй pytest для всех тестов
- Файлы тестов должны начинаться с `test_` или заканчиваться `_test.py`
- Функции тестов должны начинаться с `test_`
- Используй фикстуры из `conftest.py` для повторяющегося кода

## Genkit
- Используй genkit MCP для всех проектов, которые используют эту библиотеку

## База данных
- Для задач связанных с базой данных, используй postgres-mcp

## Документация
- Для реализации любых фич с использованием интеграций с внешними API/библиотеками изучай документацию с помощью Context7 инструментов
- Используй Context7 для доступа к документации всех библиотек

## Package Manager
- Используй pnpm исключительно (не npm или yarn) для Node.js проектов

## Размышления
- Используй sequential thinking для сложных размышлений

## Структура компонентов
- Размещай компоненты в директории `/components` и группируй по use case в поддиректориях
- Всегда используй `/components/ui` для создания новых компонентов

## Сервер
- Сервер всегда работает на порту 3000

## Производительность и безопасность
- Предлагай улучшения производительности
- Указывай на потенциальные проблемы безопасности и предлагай решения

## Установка пакетов
- Не устанавливай пакеты без явного запроса пользователя

## Код
- Предпочитай итерацию и модульность вместо дублирования кода
- Избегай дублирования кода


