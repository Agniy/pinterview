"""
üî¥ –ö–û–ù–¢–ï–ö–°–¢–ù–´–ï –ú–ï–ù–ï–î–ñ–ï–†–´ - –í–æ–ø—Ä–æ—Å—ã –∏ –∑–∞–¥–∞—á–∏ –¥–ª—è —Å–æ–±–µ—Å–µ–¥–æ–≤–∞–Ω–∏–π

–û—Å–Ω–æ–≤–Ω—ã–µ —Ç–µ–º—ã:
- __enter__ –∏ __exit__
- with statement
- contextlib
- –û–±—Ä–∞–±–æ—Ç–∫–∞ –∏—Å–∫–ª—é—á–µ–Ω–∏–π –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç–Ω—ã—Ö –º–µ–Ω–µ–¥–∂–µ—Ä–∞—Ö
"""

from contextlib import contextmanager, closing, suppress, redirect_stdout, ExitStack
import time
import sys
from io import StringIO


# ============================================================================
# –¢–ï–û–†–ï–¢–ò–ß–ï–°–ö–ò–ï –í–û–ü–†–û–°–´
# ============================================================================

"""
Q1: –ß—Ç–æ —Ç–∞–∫–æ–µ –∫–æ–Ω—Ç–µ–∫—Å—Ç–Ω—ã–π –º–µ–Ω–µ–¥–∂–µ—Ä?
A: –û–±—ä–µ–∫—Ç, –æ–ø—Ä–µ–¥–µ–ª—è—é—â–∏–π –∫–æ–Ω—Ç–µ–∫—Å—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è (with statement)
—á–µ—Ä–µ–∑ –º–µ—Ç–æ–¥—ã __enter__ –∏ __exit__

Q2: –ó–∞—á–µ–º –Ω—É–∂–Ω—ã –∫–æ–Ω—Ç–µ–∫—Å—Ç–Ω—ã–µ –º–µ–Ω–µ–¥–∂–µ—Ä—ã?
A:
- –ì–∞—Ä–∞–Ω—Ç–∏—Ä—É—é—Ç –æ—á–∏—Å—Ç–∫—É —Ä–µ—Å—É—Ä—Å–æ–≤
- –£–ø—Ä–æ—â–∞—é—Ç –æ–±—Ä–∞–±–æ—Ç–∫—É –æ—à–∏–±–æ–∫
- –î–µ–ª–∞—é—Ç –∫–æ–¥ –±–æ–ª–µ–µ —á–∏—Ç–∞–µ–º—ã–º

Q3: –ß—Ç–æ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç __enter__?
A: –ó–Ω–∞—á–µ–Ω–∏–µ, –∫–æ—Ç–æ—Ä–æ–µ –ø—Ä–∏—Å–≤–∞–∏–≤–∞–µ—Ç—Å—è –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π –ø–æ—Å–ª–µ as

Q4: –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –º–µ—Ç–æ–¥–∞ __exit__?
A: exc_type, exc_val, exc_tb - –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± –∏—Å–∫–ª—é—á–µ–Ω–∏–∏
–ï—Å–ª–∏ –≤–µ—Ä–Ω—É—Ç—å True, –∏—Å–∫–ª—é—á–µ–Ω–∏–µ –±—É–¥–µ—Ç –ø–æ–¥–∞–≤–ª–µ–Ω–æ

Q5: –ß—Ç–æ —Ç–∞–∫–æ–µ contextlib?
A: –ú–æ–¥—É–ª—å —Å —É—Ç–∏–ª–∏—Ç–∞–º–∏ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∫–æ–Ω—Ç–µ–∫—Å—Ç–Ω—ã—Ö –º–µ–Ω–µ–¥–∂–µ—Ä–æ–≤
"""


# ============================================================================
# –ó–ê–î–ê–ß–ê 1: –ü—Ä–æ—Å—Ç–æ–π –∫–æ–Ω—Ç–µ–∫—Å—Ç–Ω—ã–π –º–µ–Ω–µ–¥–∂–µ—Ä
# ============================================================================

class Timer:
    """
    üü° Middle level
    –ö–æ–Ω—Ç–µ–∫—Å—Ç–Ω—ã–π –º–µ–Ω–µ–¥–∂–µ—Ä –¥–ª—è –∏–∑–º–µ—Ä–µ–Ω–∏—è –≤—Ä–µ–º–µ–Ω–∏
    """
    
    def __enter__(self):
        self.start = time.time()
        return self
    
    def __exit__(self, exc_type, exc_val, exc_tb):
        self.end = time.time()
        self.elapsed = self.end - self.start
        print(f"–í—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è: {self.elapsed:.4f}—Å")
        return False  # –ù–µ –ø–æ–¥–∞–≤–ª—è–µ–º –∏—Å–∫–ª—é—á–µ–Ω–∏—è


def demo_timer():
    print("–ö–æ–Ω—Ç–µ–∫—Å—Ç–Ω—ã–π –º–µ–Ω–µ–¥–∂–µ—Ä Timer:")
    with Timer():
        time.sleep(0.1)
        sum(range(1000000))


# ============================================================================
# –ó–ê–î–ê–ß–ê 2: –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ñ–∞–π–ª–∞–º–∏
# ============================================================================

class FileManager:
    """
    üü° Middle level
    –ö–æ–Ω—Ç–µ–∫—Å—Ç–Ω—ã–π –º–µ–Ω–µ–¥–∂–µ—Ä –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å —Ñ–∞–π–ª–∞–º–∏
    """
    
    def __init__(self, filename, mode):
        self.filename = filename
        self.mode = mode
        self.file = None
    
    def __enter__(self):
        print(f"–û—Ç–∫—Ä—ã—Ç–∏–µ —Ñ–∞–π–ª–∞: {self.filename}")
        self.file = open(self.filename, self.mode)
        return self.file
    
    def __exit__(self, exc_type, exc_val, exc_tb):
        print(f"–ó–∞–∫—Ä—ã—Ç–∏–µ —Ñ–∞–π–ª–∞: {self.filename}")
        if self.file:
            self.file.close()
        
        if exc_type is not None:
            print(f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: {exc_val}")
        
        return False


# ============================================================================
# –ó–ê–î–ê–ß–ê 3: –ü–æ–¥–∞–≤–ª–µ–Ω–∏–µ –∏—Å–∫–ª—é—á–µ–Ω–∏–π
# ============================================================================

class SuppressException:
    """
    üü° Middle level
    –ü–æ–¥–∞–≤–ª—è–µ—Ç —É–∫–∞–∑–∞–Ω–Ω—ã–µ —Ç–∏–ø—ã –∏—Å–∫–ª—é—á–µ–Ω–∏–π
    """
    
    def __init__(self, *exceptions):
        self.exceptions = exceptions
    
    def __enter__(self):
        return self
    
    def __exit__(self, exc_type, exc_val, exc_tb):
        if exc_type is not None and issubclass(exc_type, self.exceptions):
            print(f"–ü–æ–¥–∞–≤–ª–µ–Ω–æ –∏—Å–∫–ª—é—á–µ–Ω–∏–µ: {exc_type.__name__}")
            return True  # –ü–æ–¥–∞–≤–ª—è–µ–º –∏—Å–∫–ª—é—á–µ–Ω–∏–µ
        return False


def demo_suppress():
    print("\n–ü–æ–¥–∞–≤–ª–µ–Ω–∏–µ –∏—Å–∫–ª—é—á–µ–Ω–∏–π:")
    
    with SuppressException(ValueError, TypeError):
        print("–í—ã–∑—ã–≤–∞–µ–º –æ—à–∏–±–∫—É...")
        raise ValueError("–≠—Ç–∞ –æ—à–∏–±–∫–∞ –±—É–¥–µ—Ç –ø–æ–¥–∞–≤–ª–µ–Ω–∞")
    
    print("–ö–æ–¥ –ø—Ä–æ–¥–æ–ª–∂–∞–µ—Ç —Ä–∞–±–æ—Ç–∞—Ç—å")


# ============================================================================
# –ó–ê–î–ê–ß–ê 4: –í—Ä–µ–º–µ–Ω–Ω–æ–µ –∏–∑–º–µ–Ω–µ–Ω–∏–µ –∞—Ç—Ä–∏–±—É—Ç–∞
# ============================================================================

class TemporaryAttribute:
    """
    üî¥ Senior level
    –í—Ä–µ–º–µ–Ω–Ω–æ –∏–∑–º–µ–Ω—è–µ—Ç –∞—Ç—Ä–∏–±—É—Ç –æ–±—ä–µ–∫—Ç–∞
    """
    
    def __init__(self, obj, attr, new_value):
        self.obj = obj
        self.attr = attr
        self.new_value = new_value
        self.old_value = None
    
    def __enter__(self):
        self.old_value = getattr(self.obj, self.attr)
        setattr(self.obj, self.attr, self.new_value)
        return self.new_value
    
    def __exit__(self, exc_type, exc_val, exc_tb):
        setattr(self.obj, self.attr, self.old_value)
        return False


class Config:
    debug = False


def demo_temp_attr():
    print("\n–í—Ä–µ–º–µ–Ω–Ω–æ–µ –∏–∑–º–µ–Ω–µ–Ω–∏–µ –∞—Ç—Ä–∏–±—É—Ç–∞:")
    config = Config()
    
    print(f"Debug mode: {config.debug}")
    
    with TemporaryAttribute(config, 'debug', True):
        print(f"–í –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ: {config.debug}")
    
    print(f"–ü–æ—Å–ª–µ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞: {config.debug}")


# ============================================================================
# –ó–ê–î–ê–ß–ê 5: –î–µ–∫–æ—Ä–∞—Ç–æ—Ä @contextmanager
# ============================================================================

@contextmanager
def timer_context():
    """
    üü° Middle level
    –ö–æ–Ω—Ç–µ–∫—Å—Ç–Ω—ã–π –º–µ–Ω–µ–¥–∂–µ—Ä —á–µ—Ä–µ–∑ –¥–µ–∫–æ—Ä–∞—Ç–æ—Ä
    """
    start = time.time()
    print("–¢–∞–π–º–µ—Ä –∑–∞–ø—É—â–µ–Ω...")
    
    try:
        yield  # –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –∫–æ–¥–∞ –≤ with –±–ª–æ–∫–µ
    finally:
        end = time.time()
        print(f"–¢–∞–π–º–µ—Ä: {end - start:.4f}—Å")


@contextmanager
def managed_resource(name):
    """–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ä–µ—Å—É—Ä—Å–æ–º"""
    print(f"–ó–∞—Ö–≤–∞—Ç —Ä–µ—Å—É—Ä—Å–∞: {name}")
    
    try:
        yield name
    finally:
        print(f"–û—Å–≤–æ–±–æ–∂–¥–µ–Ω–∏–µ —Ä–µ—Å—É—Ä—Å–∞: {name}")


def demo_contextmanager():
    print("\n@contextmanager –¥–µ–∫–æ—Ä–∞—Ç–æ—Ä:")
    
    with timer_context():
        time.sleep(0.1)
    
    with managed_resource("Database") as resource:
        print(f"–†–∞–±–æ—Ç–∞–µ–º —Å: {resource}")


# ============================================================================
# –ó–ê–î–ê–ß–ê 6: –¢—Ä–∞–Ω–∑–∞–∫—Ü–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
# ============================================================================

class DatabaseTransaction:
    """
    üî¥ Senior level
    –ö–æ–Ω—Ç–µ–∫—Å—Ç–Ω—ã–π –º–µ–Ω–µ–¥–∂–µ—Ä –¥–ª—è —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π –ë–î
    """
    
    def __init__(self, connection):
        self.connection = connection
        self.transaction = None
    
    def __enter__(self):
        print("–ù–∞—á–∞–ª–æ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏...")
        self.transaction = "Transaction started"
        return self
    
    def __exit__(self, exc_type, exc_val, exc_tb):
        if exc_type is None:
            print("Commit —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏")
            # self.connection.commit()
        else:
            print(f"Rollback —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ –∏–∑-–∑–∞: {exc_val}")
            # self.connection.rollback()
        
        return False


def demo_transaction():
    print("\n–¢—Ä–∞–Ω–∑–∞–∫—Ü–∏—è –ë–î:")
    
    # –£—Å–ø–µ—à–Ω–∞—è —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—è
    with DatabaseTransaction("connection") as trans:
        print("  –í—ã–ø–æ–ª–Ω—è–µ–º –æ–ø–µ—Ä–∞—Ü–∏–∏...")
    
    # –¢—Ä–∞–Ω–∑–∞–∫—Ü–∏—è —Å –æ—à–∏–±–∫–æ–π
    try:
        with DatabaseTransaction("connection") as trans:
            print("  –í—ã–ø–æ–ª–Ω—è–µ–º –æ–ø–µ—Ä–∞—Ü–∏–∏...")
            raise ValueError("–û—à–∏–±–∫–∞ –≤ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏")
    except ValueError:
        print("  –û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–∞")


# ============================================================================
# –ó–ê–î–ê–ß–ê 7: –ò–∑–º–µ–Ω–µ–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
# ============================================================================

import os

@contextmanager
def change_directory(path):
    """
    üü° Middle level
    –í—Ä–µ–º–µ–Ω–Ω–æ –º–µ–Ω—è–µ—Ç —Ä–∞–±–æ—á—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é
    """
    original = os.getcwd()
    
    try:
        os.chdir(path)
        yield path
    finally:
        os.chdir(original)


# ============================================================================
# –ó–ê–î–ê–ß–ê 8: –ú–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ –∫–æ–Ω—Ç–µ–∫—Å—Ç–Ω—ã–µ –º–µ–Ω–µ–¥–∂–µ—Ä—ã
# ============================================================================

class ResourceManager:
    """
    üî¥ Senior level
    –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –Ω–µ—Å–∫–æ–ª—å–∫–∏–º–∏ —Ä–µ—Å—É—Ä—Å–∞–º–∏
    """
    
    def __init__(self, name):
        self.name = name
    
    def __enter__(self):
        print(f"  –û—Ç–∫—Ä—ã—Ç: {self.name}")
        return self
    
    def __exit__(self, exc_type, exc_val, exc_tb):
        print(f"  –ó–∞–∫—Ä—ã—Ç: {self.name}")
        return False


def demo_multiple_context():
    print("\n–ú–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ –∫–æ–Ω—Ç–µ–∫—Å—Ç–Ω—ã–µ –º–µ–Ω–µ–¥–∂–µ—Ä—ã:")
    
    # –ö–ª–∞—Å—Å–∏—á–µ—Å–∫–∏–π —Å–ø–æ—Å–æ–±
    with ResourceManager("Resource 1"), ResourceManager("Resource 2"):
        print("  –†–∞–±–æ—Ç–∞ —Å —Ä–µ—Å—É—Ä—Å–∞–º–∏")
    
    # ExitStack –¥–ª—è –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–æ–≥–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞
    print("\nExitStack:")
    with ExitStack() as stack:
        resources = []
        for i in range(3):
            res = stack.enter_context(ResourceManager(f"Res{i+1}"))
            resources.append(res)
        
        print("  –í—Å–µ —Ä–µ—Å—É—Ä—Å—ã –æ—Ç–∫—Ä—ã—Ç—ã")


# ============================================================================
# –ó–ê–î–ê–ß–ê 9: –ó–∞—Ö–≤–∞—Ç –≤—ã–≤–æ–¥–∞
# ============================================================================

@contextmanager
def capture_stdout():
    """
    üü° Middle level
    –ó–∞—Ö–≤–∞—Ç—ã–≤–∞–µ—Ç –≤—ã–≤–æ–¥ –≤ stdout
    """
    old_stdout = sys.stdout
    sys.stdout = captured = StringIO()
    
    try:
        yield captured
    finally:
        sys.stdout = old_stdout


def demo_capture():
    print("\n–ó–∞—Ö–≤–∞—Ç –≤—ã–≤–æ–¥–∞:")
    
    with capture_stdout() as output:
        print("–≠—Ç–æ –±—É–¥–µ—Ç –∑–∞—Ö–≤–∞—á–µ–Ω–æ")
        print("–ò —ç—Ç–æ —Ç–æ–∂–µ")
    
    print(f"–ó–∞—Ö–≤–∞—á–µ–Ω–Ω—ã–π –≤—ã–≤–æ–¥: {output.getvalue()}")
    
    # –í—Å—Ç—Ä–æ–µ–Ω–Ω—ã–π redirect_stdout
    print("\nredirect_stdout:")
    f = StringIO()
    with redirect_stdout(f):
        print("–ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–π –≤—ã–≤–æ–¥")
    
    print(f"–†–µ–∑—É–ª—å—Ç–∞—Ç: {f.getvalue()}")


# ============================================================================
# –ó–ê–î–ê–ß–ê 10: Retry –∫–æ–Ω—Ç–µ–∫—Å—Ç–Ω—ã–π –º–µ–Ω–µ–¥–∂–µ—Ä
# ============================================================================

@contextmanager
def retry(max_attempts=3, delay=1):
    """
    üî¥ Senior level
    –ü–æ–≤—Ç–æ—Ä—è–µ—Ç –æ–ø–µ—Ä–∞—Ü–∏–∏ –ø—Ä–∏ –æ—à–∏–±–∫–µ
    """
    for attempt in range(max_attempts):
        try:
            yield attempt + 1
            break  # –£—Å–ø–µ—Ö
        except Exception as e:
            if attempt == max_attempts - 1:
                raise
            print(f"–ü–æ–ø—ã—Ç–∫–∞ {attempt + 1} –ø—Ä–æ–≤–∞–ª–∏–ª–∞—Å—å: {e}")
            time.sleep(delay)


def demo_retry():
    print("\nRetry –∫–æ–Ω—Ç–µ–∫—Å—Ç–Ω—ã–π –º–µ–Ω–µ–¥–∂–µ—Ä:")
    
    counter = {'value': 0}
    
    with retry(max_attempts=3, delay=0.1):
        counter['value'] += 1
        print(f"  –ü–æ–ø—ã—Ç–∫–∞ {counter['value']}")
        if counter['value'] < 2:
            raise ValueError("–û—à–∏–±–∫–∞!")
        print("  –£—Å–ø–µ—Ö!")


# ============================================================================
# –ó–ê–î–ê–ß–ê 11: Lock –∫–æ–Ω—Ç–µ–∫—Å—Ç–Ω—ã–π –º–µ–Ω–µ–¥–∂–µ—Ä
# ============================================================================

class Lock:
    """
    üî¥ Senior level
    –ü—Ä–æ—Å—Ç–∞—è —Ä–µ–∞–ª–∏–∑–∞—Ü–∏—è –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏
    """
    
    def __init__(self):
        self.locked = False
    
    def __enter__(self):
        while self.locked:
            time.sleep(0.01)
        self.locked = True
        print("Lock acquired")
        return self
    
    def __exit__(self, exc_type, exc_val, exc_tb):
        self.locked = False
        print("Lock released")
        return False


def demo_lock():
    print("\nLock:")
    lock = Lock()
    
    with lock:
        print("  –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è —Å–µ–∫—Ü–∏—è")


# ============================================================================
# –ó–ê–î–ê–ß–ê 12: closing –∏–∑ contextlib
# ============================================================================

class Resource:
    """–†–µ—Å—É—Ä—Å —Å –º–µ—Ç–æ–¥–æ–º close()"""
    
    def __init__(self, name):
        self.name = name
        print(f"–°–æ–∑–¥–∞–Ω —Ä–µ—Å—É—Ä—Å: {name}")
    
    def close(self):
        print(f"–ó–∞–∫—Ä—ã—Ç —Ä–µ—Å—É—Ä—Å: {self.name}")


def demo_closing():
    print("\nclosing:")
    
    with closing(Resource("TestResource")) as res:
        print(f"  –ò—Å–ø–æ–ª—å–∑—É–µ–º {res.name}")


# ============================================================================
# –ó–ê–î–ê–ß–ê 13: suppress –∏–∑ contextlib
# ============================================================================

def demo_suppress_contextlib():
    print("\nsuppress –∏–∑ contextlib:")
    
    with suppress(FileNotFoundError):
        with open('nonexistent_file.txt') as f:
            content = f.read()
    
    print("–ö–æ–¥ –ø—Ä–æ–¥–æ–ª–∂–∞–µ—Ç —Ä–∞–±–æ—Ç—É –ø–æ—Å–ª–µ –ø–æ–¥–∞–≤–ª–µ–Ω–Ω–æ–≥–æ –∏—Å–∫–ª—é—á–µ–Ω–∏—è")


# ============================================================================
# –ü–†–ò–ú–ï–†–´ –ò–°–ü–û–õ–¨–ó–û–í–ê–ù–ò–Ø
# ============================================================================

if __name__ == "__main__":
    print("=" * 60)
    print("–ö–û–ù–¢–ï–ö–°–¢–ù–´–ï –ú–ï–ù–ï–î–ñ–ï–†–´ - –ü—Ä–∏–º–µ—Ä—ã –∏ —Ç–µ—Å—Ç—ã")
    print("=" * 60)
    
    # –¢–µ—Å—Ç 1: Timer
    demo_timer()
    
    # –¢–µ—Å—Ç 2: –ü–æ–¥–∞–≤–ª–µ–Ω–∏–µ –∏—Å–∫–ª—é—á–µ–Ω–∏–π
    demo_suppress()
    
    # –¢–µ—Å—Ç 3: –í—Ä–µ–º–µ–Ω–Ω–æ–µ –∏–∑–º–µ–Ω–µ–Ω–∏–µ –∞—Ç—Ä–∏–±—É—Ç–∞
    demo_temp_attr()
    
    # –¢–µ—Å—Ç 4: @contextmanager
    demo_contextmanager()
    
    # –¢–µ—Å—Ç 5: –¢—Ä–∞–Ω–∑–∞–∫—Ü–∏—è
    demo_transaction()
    
    # –¢–µ—Å—Ç 6: –ú–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ –∫–æ–Ω—Ç–µ–∫—Å—Ç–Ω—ã–µ –º–µ–Ω–µ–¥–∂–µ—Ä—ã
    demo_multiple_context()
    
    # –¢–µ—Å—Ç 7: –ó–∞—Ö–≤–∞—Ç –≤—ã–≤–æ–¥–∞
    demo_capture()
    
    # –¢–µ—Å—Ç 8: Retry
    demo_retry()
    
    # –¢–µ—Å—Ç 9: Lock
    demo_lock()
    
    # –¢–µ—Å—Ç 10: closing
    demo_closing()
    
    # –¢–µ—Å—Ç 11: suppress
    demo_suppress_contextlib()
    
    print("\n" + "=" * 60)

